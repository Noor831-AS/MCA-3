import tkinter as tk
from tkinter import ttk, messagebox

def convert_code():
    code = code_editor.get("1.0", tk.END).strip()
    language = language_selector.get()
    if not code:
        messagebox.showwarning("Empty Code", "Please write some code to convert.")
        return
    if language == "Select Language":
        messagebox.showwarning("No Language Selected", "Please select a language.")
        return

    # Conversion logic for specific languages
    converted_code = None
    if language == "Python":
        converted_code = f"# Python Code\nprint(\"{code}\")"
    elif language == "Java":
        converted_code = ("public class Main {\n"
                         "    public static void main(String[] args) {\n"
                         f"        System.out.println(\"{code}\");\n"
                         "    }\n}")
    elif language == "C++":
        converted_code = ("#include <iostream>\n"
                         "using namespace std;\n\n"
                         "int main() {\n"
                         f"    cout << \"{code}\" << endl;\n"
                         "    return 0;\n}")

    if converted_code:
        code_editor.delete("1.0", tk.END)
        code_editor.insert("1.0", converted_code)
        messagebox.showinfo("Code Converted", f"Code converted to {language} successfully!")
    else:
        messagebox.showerror("Conversion Error", "Conversion for the selected language is not supported yet.")

def show_language_info():
    language = language_selector.get()
    if language == "Select Language":
        messagebox.showwarning("No Language Selected", "Please select a language.")
        return
    language_info = {
        "Python": "Python is a versatile scripting language great for beginners.",
        "Java": "Java is a popular, platform-independent, object-oriented language.",
        "C++": "C++ is powerful for system-level programming.",
    }
    info = language_info.get(language, "No information available for this language.")
    messagebox.showinfo(f"About {language}", info)

def clear_editor():
    code_editor.delete("1.0", tk.END)

# Initialize main application window
app = tk.Tk()
app.title("MCA Programming Assistant")
app.geometry("600x400")

# Header
header = tk.Label(app, text="MCA Programming Assistant", font=("Helvetica", 16, "bold"))
header.pack(pady=10)

# Code editor
code_editor_label = tk.Label(app, text="Write your code below:")
code_editor_label.pack(anchor="w", padx=10)
code_editor = tk.Text(app, height=10, width=70)
code_editor.pack(pady=5)

# Language selector
language_selector_label = tk.Label(app, text="Select a programming language:")
language_selector_label.pack(anchor="w", padx=10)
language_selector = ttk.Combobox(app, values=["Select Language", "Python", "Java", "C++"])
language_selector.current(0)
language_selector.pack(pady=5)

# Buttons
button_frame = tk.Frame(app)
button_frame.pack(pady=10)

convert_button = tk.Button(button_frame, text="Convert Code", command=convert_code)
convert_button.grid(row=0, column=0, padx=5)

info_button = tk.Button(button_frame, text="Language Info", command=show_language_info)
info_button.grid(row=0, column=1, padx=5)

clear_button = tk.Button(button_frame, text="Clear Editor", command=clear_editor)
clear_button.grid(row=0, column=2, padx=5)

exit_button = tk.Button(button_frame, text="Exit", command=app.quit)
exit_button.grid(row=0, column=3, padx=5)

# Run the application
app.mainloop()


